// Mocks generated by Mockito 5.3.0 from annotations
// in commands/test/callable.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import 'callable.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObject_0 extends _i1.SmartFake implements Object {
  _FakeObject_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [Callable].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallable extends _i1.Mock implements _i2.Callable {
  MockCallable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call() => super.noSuchMethod(Invocation.method(#call, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [CallableWithParam].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallableWithParam extends _i1.Mock implements _i2.CallableWithParam {
  MockCallableWithParam() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call(Object? param) =>
      super.noSuchMethod(Invocation.method(#call, [param]),
          returnValueForMissingStub: null);
}

/// A class which mocks [CallableWithNullableParam].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallableWithNullableParam extends _i1.Mock
    implements _i2.CallableWithNullableParam {
  MockCallableWithNullableParam() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call(Object? param) =>
      super.noSuchMethod(Invocation.method(#call, [param]),
          returnValueForMissingStub: null);
}

/// A class which mocks [AsyncCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallable extends _i1.Mock implements _i2.AsyncCallable {
  MockAsyncCallable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call() => (super.noSuchMethod(Invocation.method(#call, []),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [AsyncCallableWithParam].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallableWithParam extends _i1.Mock
    implements _i2.AsyncCallableWithParam {
  MockAsyncCallableWithParam() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(Object? param) => (super.noSuchMethod(
      Invocation.method(#call, [param]),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [AsyncCallableWithNullableParam].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallableWithNullableParam extends _i1.Mock
    implements _i2.AsyncCallableWithNullableParam {
  MockAsyncCallableWithNullableParam() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(Object? param) => (super.noSuchMethod(
      Invocation.method(#call, [param]),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [CallableWithResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallableWithResult extends _i1.Mock
    implements _i2.CallableWithResult {
  MockCallableWithResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Object call() => (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: _FakeObject_0(this, Invocation.method(#call, [])))
      as Object);
}

/// A class which mocks [CallableWithParamAndResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallableWithParamAndResult extends _i1.Mock
    implements _i2.CallableWithParamAndResult {
  MockCallableWithParamAndResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Object call(Object? param) => (super.noSuchMethod(
          Invocation.method(#call, [param]),
          returnValue: _FakeObject_0(this, Invocation.method(#call, [param])))
      as Object);
}

/// A class which mocks [CallableWithNullableParamAndResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallableWithNullableParamAndResult extends _i1.Mock
    implements _i2.CallableWithNullableParamAndResult {
  MockCallableWithNullableParamAndResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Object call(Object? param) => (super.noSuchMethod(
          Invocation.method(#call, [param]),
          returnValue: _FakeObject_0(this, Invocation.method(#call, [param])))
      as Object);
}

/// A class which mocks [AsyncCallableWithResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallableWithResult extends _i1.Mock
    implements _i2.AsyncCallableWithResult {
  MockAsyncCallableWithResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Object> call() => (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: _i3.Future<Object>.value(
              _FakeObject_0(this, Invocation.method(#call, []))))
      as _i3.Future<Object>);
}

/// A class which mocks [AsyncCallableWithParamAndResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallableWithParamAndResult extends _i1.Mock
    implements _i2.AsyncCallableWithParamAndResult {
  MockAsyncCallableWithParamAndResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Object> call(Object? param) =>
      (super.noSuchMethod(Invocation.method(#call, [param]),
              returnValue: _i3.Future<Object>.value(
                  _FakeObject_0(this, Invocation.method(#call, [param]))))
          as _i3.Future<Object>);
}

/// A class which mocks [AsyncCallableWithNullableParamAndResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockAsyncCallableWithNullableParamAndResult extends _i1.Mock
    implements _i2.AsyncCallableWithNullableParamAndResult {
  MockAsyncCallableWithNullableParamAndResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Object> call(Object? param) =>
      (super.noSuchMethod(Invocation.method(#call, [param]),
              returnValue: _i3.Future<Object>.value(
                  _FakeObject_0(this, Invocation.method(#call, [param]))))
          as _i3.Future<Object>);
}
